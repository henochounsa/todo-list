{"version":3,"sources":["reducers/todoReducer.jsx","reducers/index.js","constants/index.jsx","store/index.js","components/btn-delete/BtnDelete.jsx","components/btn-edit/BtnEdit.jsx","components/btn-validate/BtnValidate.jsx","components/todo/todo-item/TodoItem.jsx","components/todo/Todo.jsx","components/btn-add/ButtonAdd.jsx","components/modal/Modal.jsx","containers/TodoApp.jsx","actions/todo/index.js","App.js","serviceWorker.js","index.js"],"names":["initial_state","id","title","created_at","completed","rootReducer","combineReducers","todos","state","action","type","payload","map","todo","index","Object","assign","filter","createStore","BtnDelete","deleteTodo","onClick","className","BtnEdit","handleEditTodo","todo_text","toggleEditable","todo_id","viewBox","d","BtnValidate","handleValidateUpdate","version","x","y","TodoItem","toggleTodo","handleUpdate","isDisable","value","isEditing","input_value","edit_or_validate","onChange","checked","name","e","target","disabled","Todo","handleToggleTodo","handleDeleteTodo","key","ButtonAdd","props","Modal","handleAddTodo","show","children","SHOWHIDECLASS","placeholder","TodoApp","toggleModal","setState","showModal","hideModal","length","addTodo","filtre","handleDeleteAllTodo","deleteAllTodo","update_data","updateTodo","all_item_class","this","end_item_class","progress_item_class","filteredTodo","Component","connect","Date","now","App","store","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d3c94d18.chunk.js","sourcesContent":["/* eslint-disable camelcase */\n\nimport { ADD_TODO, TOGGLE_TODO, DELETE_TODO, UPDATE_TODO, DELETE_ALL_TODO } from '../constants'\n\nconst initial_state = [\n    {\n        id: 1,\n        title: 'Programmer une todo',\n        created_at: 1567322133316,\n        completed: false,\n    }\n]\nexport default (state = initial_state, action) => {\n    switch (action.type) {\n\n        case ADD_TODO:\n\n            return [\n                ...state,\n                action.payload\n            ]\n\n        case TOGGLE_TODO:\n            return state.map((todo, index) => {\n                if (todo.id === action.payload) {\n                    return Object.assign({}, todo, {\n                        completed: !todo.completed\n                    })\n                }\n\n                return todo\n            })\n\n        case UPDATE_TODO:\n            return state.map((todo, index) => {\n                if (todo.id === action.payload.id) {\n                    return Object.assign({}, todo, {\n                        title: action.payload.title\n                    })\n                }\n\n                return todo\n            })\n\n        case DELETE_TODO:\n            return state.filter(todo => todo.id !== action.payload)\n\n        case DELETE_ALL_TODO:\n            return []\n\n        default: {\n            return state\n        }\n    }\n}","import { combineReducers } from 'redux'\nimport todoReducer from './todoReducer';\nconst rootReducer = combineReducers({\n\n     todos: todoReducer\n})\n\nexport default rootReducer;","export const ADD_TODO = 'ADD_TODO'\n\nexport const DELETE_TODO = 'DELETE_TODO'\n\nexport const UPDATE_TODO = 'UPDATE_TODO'\n\nexport const TOGGLE_TODO = 'TOGGLE_TODO'\n\nexport const GET_TODO = 'GET_TODO'\n\nexport const DELETE_ALL_TODO = 'DELETE_ALL_TODO'\n\nexport const SOMETHING = 'SOMETHING'\n","import { createStore } from 'redux';\nimport rootReducer from '../reducers/';\nexport default createStore(rootReducer)","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './index.css'\n\nconst BtnDelete = ({ deleteTodo }) => {\n\n    return (\n        <div onClick={ deleteTodo } className=\"btn-delete\">\n            <span>\n                x\n            </span>\n        </div>\n    )\n}\n\nBtnDelete.propTypes = {\n    deleteTodo: PropTypes.func\n}\n\nexport default BtnDelete;","import React from 'react';\nimport Proptypes from 'prop-types'\n\nimport './index.css'\n\n// eslint-disable-next-line camelcase\nconst BtnEdit = ({ handleEditTodo, toggleEditable, todo_text, todo_id }) => {\n    return (\n        <svg\n            onClick={ () => handleEditTodo(todo_text, todo_id) }\n            viewBox=\"0 -1 401.52289 401\"\n            className=\"btn-edit\"\n        >\n            <path d=\"m370.589844 250.972656c-5.523438 0-10 4.476563-10 10v88.789063c-.019532 16.5625-13.4375 29.984375-30 30h-280.589844c-16.5625-.015625-29.980469-13.4375-30-30v-260.589844c.019531-16.558594 13.4375-29.980469 30-30h88.789062c5.523438 0 10-4.476563 10-10 0-5.519531-4.476562-10-10-10h-88.789062c-27.601562.03125-49.96875 22.398437-50 50v260.59375c.03125 27.601563 22.398438 49.96875 50 50h280.589844c27.601562-.03125 49.96875-22.398437 50-50v-88.792969c0-5.523437-4.476563-10-10-10zm0 0\" />\n            <path d=\"m376.628906 13.441406c-17.574218-17.574218-46.066406-17.574218-63.640625 0l-178.40625 178.40625c-1.222656 1.222656-2.105469 2.738282-2.566406 4.402344l-23.460937 84.699219c-.964844 3.472656.015624 7.191406 2.5625 9.742187 2.550781 2.546875 6.269531 3.527344 9.742187 2.566406l84.699219-23.464843c1.664062-.460938 3.179687-1.34375 4.402344-2.566407l178.402343-178.410156c17.546875-17.585937 17.546875-46.054687 0-63.640625zm-220.257812 184.90625 146.011718-146.015625 47.089844 47.089844-146.015625 146.015625zm-9.40625 18.875 37.621094 37.625-52.039063 14.417969zm227.257812-142.546875-10.605468 10.605469-47.09375-47.09375 10.609374-10.605469c9.761719-9.761719 25.589844-9.761719 35.351563 0l11.738281 11.734375c9.746094 9.773438 9.746094 25.589844 0 35.359375zm0 0\" />\n        </svg>\n    )\n}\nBtnEdit.propTypes = {\n    handleEditTodo: Proptypes.func,\n    toggleEditable: Proptypes.func,\n    // eslint-disable-next-line camelcase\n    todo_text: Proptypes.string,\n    // eslint-disable-next-line camelcase\n    todo_id: Proptypes.number\n}\nexport default BtnEdit;","import  React from 'react';\nimport propTypes from 'prop-types'\n\nimport './index.css'\n\nconst  BtnValidate = ({ handleValidateUpdate }) => {\n\n    return (\n        <svg onClick={ handleValidateUpdate } className=\"btn-validate\" version=\"1.1\" id=\"Capa_1\"  x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 249.425 249.425\" >\n            <g>\n                <path d=\"M206.79,81.505c-3.313,0-6,2.687-6,6v149.919H12V48.635h146.792c3.314,0,6-2.687,6-6s-2.686-6-6-6H6c-3.313,0-6,2.687-6,6\n                    v200.789c0,3.313,2.687,6,6,6h200.79c3.313,0,6-2.687,6-6V87.505C212.79,84.192,210.103,81.505,206.79,81.505z\"/>\n                <path d=\"M247.667,1.758c-2.343-2.343-6.142-2.345-8.485,0L80.416,160.523L41.023,121.13c-2.343-2.344-6.143-2.344-8.485,0\n                    c-2.343,2.343-2.343,6.142,0,8.484l43.636,43.636c1.171,1.172,2.707,1.758,4.243,1.758s3.071-0.586,4.243-1.758L247.667,10.243\n                    C250.011,7.9,250.011,4.101,247.667,1.758z\"/>\n            </g>\n        </svg>\n      )\n}\n\nBtnValidate.propTypes = {\n    handleValidateUpdate: propTypes.func\n}\n\nexport default BtnValidate;","/* eslint-disable camelcase */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport BtnDelete from '../../btn-delete'\nimport BtnEdit from '../../btn-edit'\nimport BtnValidate from '../../btn-validate'\n\nimport './index.css'\n\nconst TodoItem = ({ todo, toggleTodo, deleteTodo, handleUpdate, handleValidateUpdate, isDisable, handleEditTodo, value, isEditing }) => {\n\n    const input_value = isEditing && isEditing === todo.id ? value : todo.title\n    const edit_or_validate = isEditing && isEditing === todo.id ?\n        <BtnValidate handleValidateUpdate={ handleValidateUpdate } /> :\n        <BtnEdit handleEditTodo={ handleEditTodo } todo_id={ todo.id } todo_text={ todo.title } />\n\n    return (\n        <div className=\"todo-item\">\n            <label className=\"switch\">\n                <input onChange={ toggleTodo } checked={ todo.completed } type='checkbox' name='check' />\n                <span className=\"slider round\"></span>\n            </label>\n            <input\n                onChange={ e => handleUpdate(e.target.value) }\n                disabled={ !(isEditing && isEditing === todo.id) }\n                className=\"text\"\n                type=\"text\"\n                value={ input_value }\n            />\n            { edit_or_validate }\n\n            <BtnDelete deleteTodo={ deleteTodo } />\n        </div>\n    )\n}\n\nTodoItem.propTypes = {\n    todo: PropTypes.object,\n    toggleTodo: PropTypes.func,\n    deleteTodo: PropTypes.func,\n    handleUpdate: PropTypes.func,\n    isDisable: PropTypes.bool,\n    handleEditTodo: PropTypes.func,\n    value: PropTypes.string,\n    handleValidateUpdate: PropTypes.func,\n    isEditing: PropTypes.any\n}\nexport default TodoItem;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport TodoItem from './todo-item'\n\nimport './index.css'\n\nconst Todo = ({ todos, handleToggleTodo, handleDeleteTodo, handleUpdate, handleValidateUpdate, isDisable, handleEditTodo, value, isEditing }) => {\n\n    return (\n        <div className=\"todo-card\">\n            {\n                todos.map((todo, index) => (\n                    <TodoItem\n                        toggleTodo={ () => handleToggleTodo(todo.id) }\n                        deleteTodo={ () => handleDeleteTodo(todo.id) }\n                        todo={ todo }\n                        handleValidateUpdate={ () => handleValidateUpdate(todo.id) }\n                        value={ value }\n                        isDisable={ isDisable }\n                        handleEditTodo={ handleEditTodo }\n                        handleUpdate={ handleUpdate }\n                        key={ todo.id }\n                        isEditing={ isEditing }\n                    />\n                ))\n            }\n        </div>\n    )\n}\nTodo.propTypes = {\n    todos: PropTypes.array,\n    handleToggleTodo: PropTypes.func,\n    handleDeleteTodo: PropTypes.func,\n    handleUpdate: PropTypes.func,\n    isDisable: PropTypes.bool,\n    handleEditTodo: PropTypes.func,\n    value: PropTypes.string,\n    handleValidateUpdate: PropTypes.func,\n    isEditing: PropTypes.any\n}\nexport default Todo;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './index.css'\n\nconst ButtonAdd = props => {\n\n  return (\n      <div className=\"btn-add\" onClick= { props.action }>\n          <span>\n             +\n          </span>\n      </div>\n  )\n}\n\nButtonAdd.propTypes = {\n  action: PropTypes.func\n}\n\nexport default ButtonAdd;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './index.css'\n\nconst Modal = ({ handleAddTodo, show, children, value, handleUpdate }) => {\n  const SHOWHIDECLASS = show ? 'modal display-block' : 'modal display-none';\n\n  return (\n      <div className={ SHOWHIDECLASS }>\n          <section className=\"modal-main\">\n              <input\n                onChange={ e => handleUpdate(e.target.value) }\n                value={ value }\n                type=\"text\"\n                placeholder=\"type a todo ...\"\n              />\n              <button onClick={ handleAddTodo }>Add</button>\n          </section>\n      </div>\n  );\n};\n\nModal.propTypes = {\n  handleAddTodo: PropTypes.func,\n  show: PropTypes.bool,\n  children: PropTypes.element,\n  value: PropTypes.string,\n  handleUpdate: PropTypes.func\n\n}\nexport default Modal;","/* eslint-disable camelcase */\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport Todo from '../components/todo'\nimport ButtonAdd from '../components/btn-add'\nimport Modal from '../components/modal'\nimport './index.css'\n\nimport { addTodo, toggleTodo, deleteTodo, updateTodo, deleteAllTodo } from '../actions/todo'\n\nclass TodoApp extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showModal: false,\n            value: '',\n            filtre: 'all',\n            todos: [],\n            isDisable: true,\n            isEditing: null\n        }\n    }\n    toggleModal = () => this.setState({ showModal: !this.state.showModal, value: '' })\n\n    hideModal = () => this.setState({ showModal: false })\n\n    showModal = () => this.setState({ showModal: true })\n\n    handleUpdate = (value) => this.setState({ value })\n\n    handleAddTodo = () => {\n\n        if (this.state.value !== '') {\n            const todo = {\n                id: this.props.todos.length + 1,\n                title: this.state.value,\n            }\n            this.props.addTodo(todo)\n            this.setState({ value: '', showModal: false })\n        }\n    }\n\n    handleToggleTodo = (id) => this.props.toggleTodo(id)\n\n    handleDeleteTodo = (id) => this.props.deleteTodo(id)\n\n    filter = (filtre) => this.setState({ filtre })\n\n    toggleEditable = () => this.setState({ isDisable: !this.state.isDisable })\n\n    handleEditTodo = (todo_text, todo_id) => {\n        this.setState({ isDisable: false, value: todo_text, isEditing: todo_id })\n    }\n\n    handleDeleteAllTodo = (filter) => {\n        this.props.deleteAllTodo()\n    }\n\n    handleValidateUpdate = (id) => {\n        const update_data = {\n            id: id,\n            title: this.state.value\n        }\n        this.props.updateTodo(update_data)\n        this.setState({ isDisable: true, isEditing: null })\n\n    }\n\n    render() {\n        const all_item_class = this.state.filtre === 'all' ? 'item active' : 'item'\n        const end_item_class = this.state.filtre === 'end' ? 'item active' : 'item'\n        const progress_item_class = this.state.filtre === 'progress' ? 'item active' : 'item'\n\n        let filteredTodo = []\n        if (this.state.filtre === 'end') {\n            filteredTodo = this.props.todos.filter(todo => todo.completed)\n        } else if (this.state.filtre === 'progress') {\n            filteredTodo = this.props.todos.filter(todo => !todo.completed)\n        } else {\n            filteredTodo = this.props.todos\n        }\n\n        return (\n            <div className=\"container\">\n                <div className=\"header\">\n                    <div\n                        onClick={ () => this.filter('all') }\n                        className={ all_item_class }>\n                        Toutes\n                    </div>\n                    <div\n                        onClick={ () => this.filter('end') }\n                        className={ end_item_class }>\n                        Terminées\n                    </div>\n                    <div\n                        onClick={ () => this.filter('progress') }\n                        className={ progress_item_class }>\n                        En cours\n                    </div>\n\n                    <div\n                        onClick={ () => this.handleDeleteAllTodo('delete_all') }\n                        className=\"delete-all\">\n                        Supprimer tout\n                    </div>\n                </div>\n                <div className=\"card\">\n                    <Todo\n                        handleToggleTodo={ this.handleToggleTodo }\n                        handleDeleteTodo={ this.handleDeleteTodo }\n                        handleUpdate={ this.handleUpdate }\n                        handleValidateUpdate={ this.handleValidateUpdate }\n                        isDisable={ this.state.isDisable }\n                        value={ this.state.value }\n                        isEditing={ this.state.isEditing }\n                        handleEditTodo={ this.handleEditTodo }\n                        todos={ filteredTodo }\n                    />\n                    <Modal\n                        value={ this.state.value }\n                        handleUpdate={ this.handleUpdate }\n                        show={ this.state.showModal }\n                        handleAddTodo={ this.handleAddTodo }\n                    />\n                    <ButtonAdd action={ this.toggleModal } />\n                </div>\n            </div>\n        )\n    }\n}\n\nTodoApp.propTypes = {\n    todos: PropTypes.array,\n    addTodo: PropTypes.func,\n    toggleTodo: PropTypes.func,\n    deleteTodo: PropTypes.func,\n    progressTodo: PropTypes.func,\n    endedTodo: PropTypes.func,\n    deleteAllTodo: PropTypes.func,\n    updateTodo: PropTypes.func\n}\n\nconst mapStateToProps = state => ({\n    todos: state.todos\n})\nexport default connect(\n    mapStateToProps,\n    { addTodo, toggleTodo, deleteTodo, updateTodo, deleteAllTodo }\n)(TodoApp)","/* eslint-disable camelcase */\nimport { ADD_TODO, DELETE_TODO, TOGGLE_TODO, UPDATE_TODO, DELETE_ALL_TODO, SOMETHING } from '../../constants/'\n\nexport const addTodo = (todo) => ({\n    type: ADD_TODO,\n    payload: {\n        id: todo.id,\n        title: todo.title,\n        created_at: Date.now(),\n        completed: false\n    }\n})\n\nexport const updateTodo = (todo) => ({\n    type: UPDATE_TODO,\n    payload: {\n        id: todo.id,\n        title: todo.title\n    }\n})\nexport const toggleTodo = (id) => ({\n\n    type: TOGGLE_TODO,\n    payload: id\n})\nexport const deleteTodo = (id) => ({\n    type: DELETE_TODO,\n    payload: id\n})\n\nexport const deleteAllTodo = (id) => ({\n    type: DELETE_ALL_TODO\n})","import React from 'react';\n\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport TodoApp from './containers/TodoApp'\n\nimport './App.css';\n\nfunction App() {\n  return (\n      <Provider store={ store }>\n          <div className=\"App\">\n              <TodoApp />\n          </div>\n      </Provider>\n  );\n}\n\nexport default App;\n","/* eslint-disable no-undef */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n/* eslint no-use-before-define: 0 */  \n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${ process.env.PUBLIC_URL }/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/* eslint-disable no-undef */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}